# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - tunadex-app

on:
  # Trigger deployment on push events to the main branch
  push:
    branches:
      - main
  # Allow manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest' # Use the latest GitHub-hosted runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your code

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Sets up advanced Docker build capabilities

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: https://tunadexacr.azurecr.io/ # Your ACR login server address
          # Use the secrets generated by Azure for ACR authentication
          username: ${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_73C14A645FE045DDBFE6053F6604A0E8 }}
          password: ${{ secrets.AZUREAPPSERVICE_CONTAINERPASSWORD_CDC56D002A7F46E9A54F4C19D94DD7EC }}

      - name: Build and push container image to ACR
        id: build-and-push # Give this step an ID to potentially reference outputs if needed
        uses: docker/build-push-action@v3
        with:
          context: . # Build context is the repository root
          push: true # Push the image after building
          # Use the correct, simple tag format: <registry-url>/<image-name>:<unique-tag>
          tags: tunadexacr.azurecr.io/tuna-dex-image:${{ github.sha }} # Using commit SHA as tag
          file: ./Dockerfile # Path to your Dockerfile in the repository

  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensures the build job must complete successfully first
    environment:
      name: 'production' # Define the target environment (optional, good practice)
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }} # Output the web app URL after deployment

    steps:
    # --- NO AZURE/LOGIN STEP HERE ---

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'tunadex-app' # The name of your Azure Web App service
          # slot-name: 'production' # Optional: specify deployment slot if not default
          # Use the Azure Web App's Publish Profile secret for authentication TO AZURE APP SERVICE
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0F64FC754C87405DAECF263C7678F95F }}
          # Specify the *exact image path and tag* that was pushed to ACR in the build step
          images: 'tunadexacr.azurecr.io/tuna-dex-image:${{ github.sha }}'
